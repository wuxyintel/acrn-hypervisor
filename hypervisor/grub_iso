#!/bin/bash
# usage: usage: grub_iso <file.iso> <kernels ...>
# descr: generate a bootable iso with grub + kernel files
# author: Salva Peiro <speiro@ai2.upv.es>

function warn() { echo -e $* 1>&2; }
function usage(){ echo "usage: $(basename $0) <file.iso> <kernels ...>"; }

if test -z "$*"; then
	warn `usage`
	exit
fi

# user configurable variables
isodir=`mktemp -d /tmp/iso.XXX`
isofile=file.iso
default=0
timeout=4

while getopts t:d: c
do
    case $c in
    t)  timeout="$OPTARG";;
    d)  default="$OPTARG";;
    ?)  usage; exit 2;;
    esac
done
shift $(($OPTIND - 1))

mkdir -p $isodir/boot/grub
if test $# -gt 1; then
	isofile=$1; shift
fi
hvname=acrn.32.out
linuxname=bzImage
# generate a proper menu.lst
(
	echo    set default=$default
	echo    set timeout=$timeout
	echo    menuentry 'ACRN hypervisor' {
	echo    echo 'Load hypervisor ...'
	for f in $*; do
		if test -f $f; then
			cp $f $isodir/boot/grub/
			fname=`basename $f`
			if [ $fname = $hvname ]; then
				echo    multiboot --quirk-modules-after-kernel /boot/grub/`basename $f`
			elif [ $fname = $linuxname ]; then
				echo    module /boot/grub/`basename $f` Linux_bzImage
			else
				echo    module /boot/grub/`basename $f` Zephyr_RawImage
			fi
		fi
	done
	echo    }
) > $isodir/boot/grub/grub.cfg

grub-mkrescue -o $isofile $isodir

rm -r $isodir
